------Create angular app-----

ng new user-auth-app
cd user-auth-app
ng generate component register
ng generate component login
ng generate component profile
ng generate service auth


-----------auth.service.ts------------------
import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class AuthService {
  private users: any[] = [];
  private currentUser: any = null;

  register(user: any) {
    this.users.push(user);
  }

  login(email: string, password: string) {
    const user = this.users.find(u => u.email === email && u.password === password);
    if (user) {
      this.currentUser = user;
      return true;
    }
    return false;
  }

  getCurrentUser() {
    return this.currentUser;
  }
}




-----------register.component.ts---------------
import { Component } from '@angular/core';
import { Router } from '@angular/router';
import { AuthService } from '../auth.service';

@Component({
  selector: 'app-register',
  template: `
    <h2>Register</h2>
    <input [(ngModel)]="user.name" placeholder="Name"><br>
    <input [(ngModel)]="user.email" placeholder="Email"><br>
    <input [(ngModel)]="user.password" placeholder="Password" type="password"><br>
    <button (click)="register()">Register</button>
  `
})
export class RegisterComponent {
  user = { name: '', email: '', password: '' };

  constructor(private auth: AuthService, private router: Router) {}

  register() {
    this.auth.register(this.user);
    alert('Registration successful!');
    this.router.navigate(['/login']);
  }
}



-----------login.component.ts--------------------
import { Component } from '@angular/core';
import { Router } from '@angular/router';
import { AuthService } from '../auth.service';

@Component({
  selector: 'app-login',
  template: `
    <h2>Login</h2>
    <input [(ngModel)]="email" placeholder="Email"><br>
    <input [(ngModel)]="password" placeholder="Password" type="password"><br>
    <button (click)="login()">Login</button>
  `
})
export class LoginComponent {
  email = '';
  password = '';

  constructor(private auth: AuthService, private router: Router) {}

  login() {
    if (this.auth.login(this.email, this.password)) {
      alert('Login successful!');
      this.router.navigate(['/profile']);
    } else {
      alert('Invalid credentials');
    }
  }
}


-------------profile.component.ts-----------------
import { Component } from '@angular/core';
import { AuthService } from '../auth.service';

@Component({
  selector: 'app-profile',
  template: `
    <h2>User Profile</h2>
    <div *ngIf="user">
      Name: {{ user.name }} <br>
      Email: {{ user.email }}
    </div>
    <div *ngIf="!user">
      No user logged in.
    </div>
  `
})
export class ProfileComponent {
  user: any;

  constructor(private auth: AuthService) {
    this.user = this.auth.getCurrentUser();
  }
}


---------------- Set up routing in app-routing.module.ts----------------------
import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { RegisterComponent } from './register/register.component';
import { LoginComponent } from './login/login.component';
import { ProfileComponent } from './profile/profile.component';

const routes: Routes = [
  { path: 'register', component: RegisterComponent },
  { path: 'login', component: LoginComponent },
  { path: 'profile', component: ProfileComponent },
  { path: '', redirectTo: '/register', pathMatch: 'full' }
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }



---------------Enable forms in app.module.ts---------------
import { FormsModule } from '@angular/forms';
import { AppRoutingModule } from './app-routing.module';

@NgModule({
  declarations: [...],
  imports: [BrowserModule, FormsModule, AppRoutingModule],
  bootstrap: [AppComponent]
})
export class AppModule { }


-------Build the app--------------
ng build --prod


--------Deploy to Google App Engine----------


Install Google Cloud SDK on your machine
https://cloud.google.com/sdk/docs/install

--Login and set project--

bash
gcloud auth login
gcloud config set project YOUR_PROJECT_ID

--Add app.yaml to your project:--

runtime: nodejs16
instance_class: F1

--Deploy--
gcloud app deploy


--Access your app---
gcloud app browse
